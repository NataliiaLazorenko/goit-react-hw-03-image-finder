{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/images-api.js","App.js","index.js"],"names":["Searchbar","state","query","handleInputChange","event","value","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","tags","largeImageURL","src","alt","data-largeimage","ImageGalery","images","onClick","map","id","Button","modalRoot","document","querySelector","Modal","componentDidMount","window","addEventListener","handleKeyDown","body","classList","add","componentWillUnmount","removeEventListener","remove","code","onClose","handleOverlayClick","target","children","createPortal","fetchImages","searchQuery","currentPage","perPage","axios","get","then","response","data","App","totalPages","isLoading","error","showModal","currentImage","description","onChangeQuery","options","hits","totalHits","length","prevState","Math","ceil","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","handleGalleryClick","nodeName","dataset","largeimage","toggleModal","prevProps","shouldRenderLoadMoreBtn","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8e4a03fe.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Searchbar.css';\r\n\r\nclass Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { value } = event.currentTarget;\r\n\r\n    this.setState({ query: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      query: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleInputChange}\r\n            value={this.state.query}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.css';\r\n\r\nconst ImageGalleryItem = ({ webformatURL, tags, largeImageURL }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      src={webformatURL}\r\n      alt={tags}\r\n      data-largeimage={largeImageURL}\r\n      className=\"ImageGalleryItem-image\"\r\n    />\r\n  </li>\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport './ImageGallery.css';\r\n\r\nconst ImageGalery = ({ images, onClick }) => (\r\n  <ul className=\"ImageGallery\" onClick={onClick}>\r\n    {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n      <ImageGalleryItem\r\n        key={id}\r\n        webformatURL={webformatURL}\r\n        tags={tags}\r\n        largeImageURL={largeImageURL}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nImageGalery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button type=\"button\" onClick={onClick} className=\"Button\">\r\n    Load more\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './Modal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n    document.body.classList.add('Modal-open');\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n    document.body.classList.remove('Modal-open');\r\n  };\r\n\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleOverlayClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleOverlayClick}>\r\n        <div className=\"Modal\">{children} </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import axios from 'axios';\r\n\r\nconst key = '19732926-c388afddba2de31b45aabc7bd';\r\n\r\nconst fetchImages = ({ searchQuery = '', currentPage = 1, perPage = 12 }) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${key}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\r\n    )\r\n    .then(response => response.data);\r\n};\r\n\r\nexport default fetchImages;\r\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGalery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport fetchImages from './services/images-api';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    currentPage: 1,\n    totalPages: 1,\n    images: [],\n\n    isLoading: false,\n    error: null,\n\n    showModal: false,\n    currentImage: { largeImageURL: '', description: '' },\n  };\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      totalPages: 1,\n      images: [],\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  fetchImages = () => {\n    const { searchQuery, currentPage } = this.state;\n    const options = { searchQuery, currentPage };\n\n    this.setState({ isLoading: true, error: null });\n\n    fetchImages(options)\n      .then(({ hits, totalHits }) =>\n        hits.length > 0\n          ? this.setState(prevState => ({\n              images: [...prevState.images, ...hits],\n              currentPage: prevState.currentPage + 1,\n              totalPages: Math.ceil(totalHits / 12),\n            }))\n          : this.setState({ error: 'Nothing found, specify your query' }),\n      )\n      .catch(error =>\n        this.setState({\n          error,\n        }),\n      )\n      .finally(() => {\n        this.setState({ isLoading: false });\n\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      });\n  };\n\n  handleGalleryClick = event => {\n    if (event.target.nodeName === 'IMG') {\n      const largeImageURL = event.target.dataset.largeimage;\n      const description = event.target.alt;\n\n      this.setState({ currentImage: { largeImageURL, description } });\n      this.toggleModal();\n    }\n  };\n\n  toggleModal = () => {\n    // this.setState(prevState => ({ showModal: !prevState.showModal }));\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const {\n      currentPage,\n      totalPages,\n      images,\n      isLoading,\n      error,\n      showModal,\n      currentImage,\n    } = this.state;\n\n    const shouldRenderLoadMoreBtn =\n      images.length > 0 && !isLoading && currentPage <= totalPages;\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        {error && <p className=\"warningMessage\">{error}</p>}\n\n        <ImageGalery images={images} onClick={this.handleGalleryClick} />\n\n        {isLoading && (\n          <div className=\"spinnerContainer\">\n            <Loader type=\"Bars\" color=\"#3f51b5\" height={80} width={80} />\n          </div>\n        )}\n\n        {shouldRenderLoadMoreBtn && <Button onClick={this.fetchImages} />}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img\n              className=\"largeImage\"\n              src={currentImage.largeImageURL}\n              alt={currentImage.description}\n            />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}